# -*- coding: utf-8 -*-
"""Tuan_4_Sang_thu_7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BSh0MGSKsr7B25jbGAvlMfaTy41tkHCT
"""

import numpy as np
import skfuzzy as fuzz
import matplotlib.pyplot as plt
x= np.arange(50,81,1)
slow=fuzz.trimf(x,[50,50,70])
medium=fuzz.trimf(x,[55,65,80])
fast=fuzz.trimf(x,[60,75,90])
plt.figure()
plt.plot(x,slow,'r',linewidth=1.5,label='slow')
plt.plot(x,medium,'b',linewidth=1.5,label='medium')
plt.plot(x,fast,'g',linewidth=1.5,label='fast')

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as crt
food= crt.Antecedent(np.arange(0,11,1),'food')
service= crt.Antecedent(np.arange(0,11,1),'service')
tip=crt.Consequent(np.arange(10,31,1),'tip')
food['poor']=fuzz.trimf(food.universe,[0,0,5])
food['medium']=fuzz.trimf(food.universe,[0,5,10])
food['high']=fuzz.trimf(food.universe,[5,10,10])
service['poor']=fuzz.trimf(service.universe,[0,0,5])
service['medium']=fuzz.trimf(service.universe,[0,5,10])
service['high']=fuzz.trimf(service.universe,[5,10,10])
tip['less']=fuzz.trimf(tip.universe,[10,12,13])
tip['medium']=fuzz.trimf(tip.universe,[10,13,24])
tip['much']=fuzz.trimf(tip.universe,[15,20,25])
food.view()
service.view()
tip.view()
rule1=crt.Rule(food['poor'] & service['poor'],tip['less'])
rule2=crt.Rule(food['poor'] & service['medium'],tip['less'])
rule3=crt.Rule(food['poor'] & service['high'],tip['medium'])
rule4=crt.Rule(food['medium']& service['poor'],tip['less'])
rule5=crt.Rule(food['medium']& service['medium'],tip['medium'])
rule6=crt.Rule(food['medium']& service['high'],tip['much'])
rule7=crt.Rule(food['high']& service['poor'],tip['less'])
rule8=crt.Rule(food['high']& service['medium'],tip['much'])
rule9=crt.Rule(food['high']& service['high'],tip['much'])
#tren deu la nhap du lieu
tipping_crt=crt.ControlSystem([rule1,rule2,rule3,rule4,rule5,rule6,rule7,rule8,rule9])
tipping=crt.ControlSystemSimulation(tipping_crt)
tipping.input['food']=6.5
tipping.input['service']=7
tipping.compute()
print(tipping.output['tip'])
tip.view(sim=tipping)